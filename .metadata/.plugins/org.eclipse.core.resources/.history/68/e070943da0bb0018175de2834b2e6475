/*
 * Wire.cpp
 *
 *  Created on: 29 июл. 2018 г.
 *      Author: wetfloor
 */

#include <Wire.hpp>

Wire::Wire(Module& src_, Module& dst_,
		Parameter::ParameterName param_) :
		source(&src_), destination(&dst_), bufferNumber(0) {

	plug(param_);
	src_.connectedWires++;
	/*uint32_t realParamNum;
	switch (consumer_.getModuleType()) {
	case Module::ModuleType::GENERATOR: {
		for (realParamNum = 0;
				realParamNum
						< sizeof(Generator::parameter)
								/ sizeof(Parameter::ParameterName);
				realParamNum++) {
			if (parameter_
					== dynamic_cast<Generator&>(consumer_).parameter[realParamNum].paramType) {
				uint32_t shiftingValue =
						dynamic_cast<Generator&>(consumer_).parameter[realParamNum].bitmap;
				uint32_t socketNumber = 0;

				while (shiftingValue & 1) {
					shiftingValue >>= 1;
					socketNumber++;
				};

				dynamic_cast<Generator&>(consumer_).parameter[realParamNum].inputBufferPointer[socketNumber] =
						provider_.getOutputBufferPointer();

				dynamic_cast<Generator&>(consumer_).parameter[realParamNum].bitmap |=
						(1 << socketNumber);

				bufferNumber = socketNumber;
				break;
			};
			//dynamic_cast<Generator&>(consumer_).parameter[realParamNum]
		};
	}
		;
	};*/
};

/*Wire::Wire(const Module& providerParam, Module& consumerParam, )
 : consumer(consumerParam) {
 bufferNumber = consumer.getNumberOfNextFreeInputBuffer();
 if (bufferNumber < ::LINKS) {
 consumer.setInputBufferPointer(bufferNumber,
 providerParam.getOutputBufferPointer());
 };
 };*/

void Wire::unplug() {
	dynamic_cast<Generator&>(*destination).param[realParamNum].socketbit &= ~(1   // ?M
			<< bufferNumber);
	source->connectedWires--;
	/*if (bufferNumber < ::LINKS) {
	 consumer.setInputBufferPointer(bufferNumber, nullptr);
	 };
	 delete this;*/
};

void Wire::replugConsumer(Module& dst_,
		Parameter::ParameterName param_) {
	dynamic_cast<Generator&>(*destination).param[realParamNum].socketbit &= ~(1  // ?M
			<< bufferNumber);
	destination = &dst_;
	plug(param_);
};

void Wire::replugProvider(Module& src_) {
	source->connectedWires--;
	source = &src_;
	source->connectedWires++;
	switch (destination->getModuleType()) {
	case Module::ModuleType::GENERATOR: {                                     // ?M
		dynamic_cast<Generator&>(*destination).param[realParamNum].inputBufferPointer[bufferNumber] =
				source->getOutputBufferPointer();

		};
	};
};

void Wire::plug(Parameter::ParameterName param_) {
	switch (destination->getModuleType()) {
		case Module::ModuleType::GENERATOR: {
			for (realParamNum = 0;
					realParamNum
							< sizeof(Generator::param)
									/ sizeof(Parameter::ParameterName);
					realParamNum++) {
				if (param_
						== dynamic_cast<Generator&>(*destination).param[realParamNum].paramType) {
					uint32_t shiftingValue =
							dynamic_cast<Generator&>(*destination).param[realParamNum].socketbit;
					uint32_t socketNumber = 0;

					while (shiftingValue & 1) {
						shiftingValue >>= 1;
						socketNumber++;
					};

					dynamic_cast<Generator&>(*destination).param[realParamNum].inputBufferPointer[socketNumber] =
							source->getOutputBufferPointer();

					dynamic_cast<Generator&>(*destination).param[realParamNum].socketbit |=
							(1 << socketNumber);

					bufferNumber = socketNumber;
					break;
				};

			};
		}
			;
		};
};
